version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      opensips_cluster:
        ipv4_address: 172.168.34.52
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 10

  opensips:
    image: opensips:opensips_arm64-3.4.11
    container_name: opensips
    volumes:
      - ./opensips_configs/opensips.cfg:/usr/local/etc/opensips/opensips.cfg
    networks:
      opensips_cluster:
        ipv4_address: 172.168.34.51
    ports:
      - "5060:5060/udp"
      - "5060:5060/tcp"
      - "8888:8888/tcp"

    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  opensips-cli:
    container_name: "opensips-cli"
    image: opensips/opensips-cli:latest
    network_mode: host
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200m"
    restart: always
    ulimits:
      core: -1
    privileged: true
    stdin_open: true
    tty: true
    entrypoint: ["/run.sh", "-o", "communication_type=http"]
    volumes:
      - ./opensips_cli_config:/config
    depends_on:
      - opensips
    ### Usage âžœ docker exec -it opensips-cli opensips-cli  -f /config/opensips-cli.cfg -o url=http://172.168.34.51:8888/mi  -x mi version 
  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      opensips_cluster:
        ipv4_address: 172.168.34.53
    restart: unless-stopped

networks:
  opensips_cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.168.34.0/24